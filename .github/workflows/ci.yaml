name: "CI"

on:
  push:
    branches:
      - main

env:
  cluster: cluster-tp-cicd
  zone: europe-west1-b
  project: boxwood-charmer-347912
  chart-name: hello-rust
  chart-path: ./helm
  values-path: ./helm/values.yaml

jobs:
  build_and_push:
    name: Build and push to docker.io
    runs-on: ubuntu-latest
    steps:
      - name: Fetch git history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install gitversion
        uses: gittools/actions/gitversion/setup@v0.9.11
        with:
          versionSpec: "5.x"
      - name: Run gitversion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.11
      - name: Format gitversion output
        id: version
        run: echo "::set-output name=version::${{ steps.gitversion.outputs.majorMinorPatch }}-${{ steps.gitversion.outputs.shortSha }}"
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Use dependencies cache
        uses: Swatinem/rust-cache@v1
      - name: Build and package release application
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push the docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: slucido/city-api:${{ steps.version.outputs.version }}, slucido/city-api:latest
  
  deploy-gcloud:
    name: Deploy to gcloud
    environment: gcloud
    runs-on: ubuntu-latest
    needs: [build_and_push]
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"
      - name: "Install Helm"
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
      - name: "Connect to cluster"
        run: "gcloud container clusters get-credentials ${{env.cluster}} --zone ${{env.zone}} --project ${{env.project}}"
      - name: "Deploy chart"
        run: helm upgrade --install ${{env.chart-name}} ${{env.chart-path}} --values ${{env.values-path}}

  deploy-k3d:
    runs-on: ubuntu-latest
    needs: [build_and_push]
    environment: k3d
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Decode kubeconfig file
      run: |
        echo "::set-output name=KUBECONFIG_DECODED::$('${{ secrets.KUBERNETES_CONFIG }}')"
      id: kubeconfig
    - name: Install helm
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh
    - name: Move kubeconfig file
      run: echo "${{ secrets.KUBERNETES_CONFIG_DECODED }}" > ./kubeconfig
    - name: Execute helm command
      run: helm upgrade rust-tp-cicd ./helm/ --install --kubeconfig=./kubeconfig -f ./helm/values-cd-k3d.yaml
